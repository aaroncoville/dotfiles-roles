#!/usr/bin/env fish

#######################################################################
#                               General                               #
#######################################################################

# source fzf binds
fzf_key_bindings

#######################################################################
#                               Aliases                               #
#######################################################################

if which subl &>/dev/null
   alias s subl
end

alias g git
alias tx tmuxinator
alias r 'source ~/.config/fish/config.fish'
alias ssh 'assh wrapper ssh --'
alias p 'cd ~/projects'
alias w 'cd ~/work'
alias d 'cd ~/dotfiles'
alias gdc 'git diff --cached | vim -'
alias tree 'tree -a -I ".git|*.pyc|*pycache*"'
alias cdp 'cd (git rev-parse --show-toplevel)'


#######################################################################
#                          Windows-specific                           #
#######################################################################

if grep -qE "(Microsoft|WSL)" /proc/version &>/dev/null
   if [ (umask) = "0000" ]
      umask 0022
   end

   set -gx DOCKER_HOST "tcp://localhost:2375"
   # fixing volumes not working in WSL1
   set -gx ROOTFS_DIR (echo "/c/Users/oleksandrp/AppData/Local\
      /Packages/CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\
      /LocalState/rootfs" | sed '/^$/d;s/[[:blank:]]//g')

   function proxy
      if [ -f ~/.proxy ]
         rm ~/.proxy
         rm ~/.gitconfig.proxy
      else
         ln -s ~/dotfiles/.proxy ~/.proxy
         ln -s ~/dotfiles/.gitconfig.proxy ~/.gitconfig.proxy
      end
   end

   function open
     '/c/Program Files (x86)/Google/Chrome/Application/chrome.exe' $argv
   end

   function dnsfix
      set -lx search (grep -F "search" /etc/resolv.conf)
      set -lx ipv4dnsraw (/c/Windows/system32/netsh.exe \
         interface ip show dns | tr -d '\r');
      set -lx ipv6dnsraw (/c/Windows/system32/netsh.exe \
         interface ipv6 show dns | tr -d '\r');
      set -lx nameservers (printf '%s\n%s\n' \
         $ipv4dnsraw $ipv6dnsraw | grep -iF "DNS Servers" | grep -v "None" \
         | cut -c 43- |  uniq | sed 's/^/nameserver /')
      printf '%s on %s\n%s\n%s\n' '# generated by dnsfix' (date) \
         $nameservers $search | sudo tee /etc/resolv.conf >/dev/null;
   end

   # https://github.com/yuk7/ArchWSL/issues/109
   alias rg "rg -j1 --hidden -i"

   # Source corporate proxy if exists
   if [ -f ~/.proxy ]; . \
      ~/.proxy; end

      # Fix DNS when connecting through VPN
      dnsfix
   end

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/esolidarity/google-cloud-sdk/path.fish.inc' ]; . \
   '/Users/esolidarity/google-cloud-sdk/path.fish.inc'; end

#######################################################################
#                               Exports                               #
#######################################################################

set -gx EDITOR "vim"

set -gx FZF_DEFAULT_COMMAND "rg --files --hidden --follow --glob '!.git'"
set -gx FZF_DEFAULT_OPTS "--color=dark"

set -gx GOPATH ~/go
set -gx GOBIN "$GOPATH/bin"
set -gx PATH "$GOBIN" $PATH

set -gx PATH ~/.local/bin $PATH
set -gx PATH ~/bin $PATH

set -gx PATH "/c/Program\ Files/Oracle/VirtualBox" $PATH

set -gx  DISPLAY :0

#######################################################################
#                               Functions                             #
#######################################################################

function fif --description="Using ripgrep combined with preview"
   if test (count $argv) -lt 1; or test $argv[1] = "--help"
      printf "Need a string to search for."
   else if test (count $argv) -eq 1
      rg --files-with-matches --no-messages "$argv[1]" | fzf --preview \
         "rg  --ignore-case --pretty --context 10 '$argv[1]'"
   end
end


function vdiff --description="Compare two files or dirs with vim"
   if test (count $argv) -ne 2; or test $argv[1] = "--help"
      printf "vdiff requires two arguments"
      printf "  comparing dirs:  vdiff dir_a dir_b"
      printf "  comparing files: vdiff file_a file_b"
   else
      set --local left "$argv[1]"
      set --local right "$argv[2]"

      if [ -d "$left" ] && [ -d "$right" ]
          vim +"DirDiff $left $right"
      else
          vim -d "$left" "$right"
      end
    end
 end

function sudo
    if test "$argv" = !!
        eval command sudo $history[1]
    else
        command sudo $argv
    end
end
